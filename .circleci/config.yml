version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:latest

commands:
  set_git_user:
    description: "setup circle CI as a git user"
    steps:
      - add_ssh_keys

      - run: |
          git config credential.helper 'cache --timeout=120'
          git config user.name 'CircleCI'
          git config user.email '<>'

  set_production_environment:
    description: "sets the current environment to production"
    steps:
      - run: |
          echo "export ENV=production" >> $BASH_ENV
          source $BASH_ENV

  get_node_modules:
    description: "fetch all necessary node dependencies"
    steps:
      - set_production_environment

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-

      - run: make -e yarn.lock

      - save_cache:
          paths:
            - .cache/deps
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

jobs:
  build:
    executor: node

    steps:
      - checkout
      - get_node_modules

      - run: make -e
  
  lint:
    executor: node
    
    steps:
      - checkout
      - get_node_modules
      
      - run: make -e lint

  test:
    executor: node

    steps:
      - checkout
      - get_node_modules

      - run: make -e test

  update_docs_and_patch_master:
    executor: node

    steps:
      - checkout
      - get_node_modules
      - set_git_user

      - run: |
          set -e

          # merge development into master
          git fetch
          git checkout master
          git merge development

          # tag master with new version/docs and push
          make -e patch
          git push -u origin master --tags

workflows:
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master
      - lint:
          requires:
            - build
          filters:
            branches:
              ignore:
                - master
      - test:
          requires:
            - build
          filters:
            branches:
              ignore:
                - master
      - update_docs_and_patch_master:
          requires:
            - lint
            - test
          filters:
            branches:
              only: development
