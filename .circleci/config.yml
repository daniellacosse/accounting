version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:latest
    environment:
      USER: ""

commands:
  set_git_user:
    description: "setup circle CI as a git user"
    steps:
      - add_ssh_keys

      - run: |
          git config credential.helper 'cache --timeout=120'
          git config user.name 'CircleCI'
          git config user.email '<>'

  set_production_environment:
    description: "sets the current environment to production"
    steps:
      - run: echo "ENV=production" > .env
  
  get_brew:
    description: "installs homebrew"
    steps:
      - run: sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"

  get_dependencies:
    description: "fetch all necessary dependencies"
    steps:
      - checkout
      - set_production_environment
      - get_brew

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-

      - run: make yarn.lock

      - save_cache:
          paths:
            - .cache/deps
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

jobs:
  build:
    executor: node

    steps:
      - get_dependencies

      - run: "make CMD=echo:stub"
  
  lint:
    executor: node
    
    steps:
      - get_dependencies
      
      - run: make lint

  test:
    executor: node

    steps:
      - get_dependencies

      - run: make test

  coverage:
    executor: node

    steps:
      - get_dependencies

      - run: make coverage

  update_docs_and_patch:
    executor: node

    steps:
      - get_dependencies
      - set_git_user

      - run: |
          set -e

          git checkout $CIRCLE_BRANCH

          # tag master with new version/docs and push
          make patch
          git push origin $CIRCLE_BRANCH --tags 

  release:
    executor: node

    steps:
      - get_dependencies
      - set_git_user

      - run: make release

workflows:
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master
      - lint:
          filters:
            branches:
              ignore:
                - master
      - test:
          filters:
            branches:
              ignore:
                - master
      - coverage:
          filters:
            branches:
              ignore:
                - master
  release:
    jobs:
      - update_docs_and_patch:
          filters:
            branches:
              only: master
      - release:
          requires:
            - update_docs_and_patch
          filters:
            branches:
              only: master
